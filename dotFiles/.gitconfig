[user]
name = Marshall Ku
email = marshall@kakao.com

[credential]
helper = store

[init]
defaultBranch = master

[core]
editor = nvim

[pull]
rebase = true

[rebase]
autoSquash = true
autoStash = true
updateRefs = true

[branch]
sort = -committerdate

[tag]
sort = version:refname

[diff]
algorithm = histogram
colorMoved = plain
mnemonicPrefix = true
renames = true

[fetch]
prune = true
pruneTags = true
all = true

[help]
autocorrect = prompt

[commit]
verbose = true

[rerere]
enabled = true
autoupdate = true

[alias]
alias = "!git config --list | egrep '^alias.+' | sed -e 's/^alias\\.//' | sed -e 's/^[^=]*=/\\'$'\\033[31m&\\033[(B\\033[m/'"
s = status -s
a = "!git add $(git status -s | fzf -m | awk '{print $2}')"
out = "log @{u}.."
bb = "! # Branch tools. Type 'git bb help' ; \n\
    checkout_with_log() { \n\
      current_branch=$(git branch --show-current); \
      target_branch=$1; \
      root_dir=$(git rev-parse --show-toplevel); \
      if [ ! -f ~/.git-branch-history ]; then \
        touch ~/.git-branch-history; \
      fi; \
      git checkout $target_branch; \
      if grep -q $root_dir ~/.git-branch-history; then \
        grep -v $root_dir ~/.git-branch-history > ~/.git-branch-history.tmp; \
        mv ~/.git-branch-history.tmp ~/.git-branch-history; \
      fi; \
      printf '%s=%s\n' \"$root_dir\" \"$current_branch\" >> ~/.git-branch-history; \
    } \n\
    f() { \n\
      if [ $# = 0 ]; then \
        branch=$(git branch -vv | grep -v '^\\*' | fzf | awk '{print $1}'); \
        checkout_with_log $branch; \
      elif [ $1 = 'help' ]; then \
        echo 'git bb           : Select and checkout branch'; \
        echo 'git bb c, clean  : Clean all merged branches'; \
        echo 'git bb d, D      : Delete seleted branches(D: force)'; \
        echo 'git bb l, list   : List branches excluding the current branch'; \
        echo 'git bb m, merged : List merged branches excluding the current and master branches'; \
        echo 'git bb h, history: Back to the previous branch'; \
      elif [ $1 = 'd' -o $1 = 'D' ]; then \
        git branch -$1 $(git bb list | fzf -m); \
      elif [ $1 = 'clean' -o $1 = 'c' ]; then \
        git branch -d $(git bb merged); \
      elif [ $1 = 'list' -o $1 = 'l' ]; then \
        git branch | grep -v '^\\*'; \
      elif [ $1 = 'merged' -o $1 = 'm' ]; then \
        git branch --merged | grep -v '^\\*\\|\\<master$'; \
      elif [ $1 = 'history' -o $1 = 'h' ]; then \
        root_dir=$(git rev-parse --show-toplevel); \
        if [ ! -f ~/.git-branch-history ]; then \
          touch ~/.git-branch-history; \
        fi; \
        last_branch=$(cat ~/.git-branch-history | grep $root_dir | awk -F= '{print $2}'); \
        if [ -z \"$last_branch\" ]; then \
          echo 'No previous branch found'; \
        else \
          checkout_with_log $last_branch; \
        fi; \
      else \
        checkout_with_log $1; \
      fi; \
    }; f"
